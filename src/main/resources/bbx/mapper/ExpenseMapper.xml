<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbx.mapper.ExpenseMapper">
  <resultMap id="BaseResultMap" type="bbx.bean.Expense">
    <id column="expense_id" jdbcType="INTEGER" property="expenseId" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="type_id" jdbcType="VARCHAR" property="typeId" />
    <result column="accountBook_id" jdbcType="VARCHAR" property="accountbookId" />
    <result column="expense_amount" jdbcType="VARCHAR" property="expenseAmount" />
    <result column="expense_comment" jdbcType="VARCHAR" property="expenseComment" />
    <result column="expense_date" jdbcType="VARCHAR" property="expenseDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    expense_id, account_id, type_id, accountBook_id, expense_amount, expense_comment, 
    expense_date
  </sql>
  <select id="selectByExample" parameterType="bbx.bean.ExpenseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from expense
    where expense_id = #{expenseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from expense
    where expense_id = #{expenseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="bbx.bean.ExpenseExample">
    delete from expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="bbx.bean.Expense">
    insert into expense (expense_id, account_id, type_id, 
      accountBook_id, expense_amount, expense_comment, 
      expense_date)
    values (#{expenseId,jdbcType=INTEGER}, #{accountId,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, 
      #{accountbookId,jdbcType=VARCHAR}, #{expenseAmount,jdbcType=VARCHAR}, #{expenseComment,jdbcType=VARCHAR}, 
      #{expenseDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="bbx.bean.Expense">
    insert into expense
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="expenseId != null">
        expense_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="accountbookId != null">
        accountBook_id,
      </if>
      <if test="expenseAmount != null">
        expense_amount,
      </if>
      <if test="expenseComment != null">
        expense_comment,
      </if>
      <if test="expenseDate != null">
        expense_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="expenseId != null">
        #{expenseId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="accountbookId != null">
        #{accountbookId,jdbcType=VARCHAR},
      </if>
      <if test="expenseAmount != null">
        #{expenseAmount,jdbcType=VARCHAR},
      </if>
      <if test="expenseComment != null">
        #{expenseComment,jdbcType=VARCHAR},
      </if>
      <if test="expenseDate != null">
        #{expenseDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="bbx.bean.ExpenseExample" resultType="java.lang.Integer">
    select count(*) from expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update expense
    <set>
      <if test="record.expenseId != null">
        expense_id = #{record.expenseId,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountbookId != null">
        accountBook_id = #{record.accountbookId,jdbcType=VARCHAR},
      </if>
      <if test="record.expenseAmount != null">
        expense_amount = #{record.expenseAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.expenseComment != null">
        expense_comment = #{record.expenseComment,jdbcType=VARCHAR},
      </if>
      <if test="record.expenseDate != null">
        expense_date = #{record.expenseDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update expense
    set expense_id = #{record.expenseId,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=VARCHAR},
      accountBook_id = #{record.accountbookId,jdbcType=VARCHAR},
      expense_amount = #{record.expenseAmount,jdbcType=VARCHAR},
      expense_comment = #{record.expenseComment,jdbcType=VARCHAR},
      expense_date = #{record.expenseDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="bbx.bean.Expense">
    update expense
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="accountbookId != null">
        accountBook_id = #{accountbookId,jdbcType=VARCHAR},
      </if>
      <if test="expenseAmount != null">
        expense_amount = #{expenseAmount,jdbcType=VARCHAR},
      </if>
      <if test="expenseComment != null">
        expense_comment = #{expenseComment,jdbcType=VARCHAR},
      </if>
      <if test="expenseDate != null">
        expense_date = #{expenseDate,jdbcType=VARCHAR},
      </if>
    </set>
    where expense_id = #{expenseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="bbx.bean.Expense">
    update expense
    set account_id = #{accountId,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=VARCHAR},
      accountBook_id = #{accountbookId,jdbcType=VARCHAR},
      expense_amount = #{expenseAmount,jdbcType=VARCHAR},
      expense_comment = #{expenseComment,jdbcType=VARCHAR},
      expense_date = #{expenseDate,jdbcType=VARCHAR}
    where expense_id = #{expenseId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="bbx.bean.Expense">
    <id column="expense_id" jdbcType="INTEGER" property="expenseId" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="type_id" jdbcType="VARCHAR" property="typeId" />
    <result column="accountBook_id" jdbcType="VARCHAR" property="accountbookId" />
    <result column="expense_amount" jdbcType="VARCHAR" property="expenseAmount" />
    <result column="expense_comment" jdbcType="VARCHAR" property="expenseComment" />
    <result column="expense_date" jdbcType="VARCHAR" property="expenseDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    expense_id, account_id, type_id, accountBook_id, expense_amount, expense_comment, 
    expense_date
  </sql>
  <select id="selectByExample" parameterType="bbx.bean.ExpenseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from expense
    where expense_id = #{expenseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from expense
    where expense_id = #{expenseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="bbx.bean.ExpenseExample">
    delete from expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="bbx.bean.Expense">
    insert into expense (expense_id, account_id, type_id, 
      accountBook_id, expense_amount, expense_comment, 
      expense_date)
    values (#{expenseId,jdbcType=INTEGER}, #{accountId,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, 
      #{accountbookId,jdbcType=VARCHAR}, #{expenseAmount,jdbcType=VARCHAR}, #{expenseComment,jdbcType=VARCHAR}, 
      #{expenseDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="bbx.bean.Expense">
    insert into expense
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="expenseId != null">
        expense_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="accountbookId != null">
        accountBook_id,
      </if>
      <if test="expenseAmount != null">
        expense_amount,
      </if>
      <if test="expenseComment != null">
        expense_comment,
      </if>
      <if test="expenseDate != null">
        expense_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="expenseId != null">
        #{expenseId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="accountbookId != null">
        #{accountbookId,jdbcType=VARCHAR},
      </if>
      <if test="expenseAmount != null">
        #{expenseAmount,jdbcType=VARCHAR},
      </if>
      <if test="expenseComment != null">
        #{expenseComment,jdbcType=VARCHAR},
      </if>
      <if test="expenseDate != null">
        #{expenseDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="bbx.bean.ExpenseExample" resultType="java.lang.Integer">
    select count(*) from expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update expense
    <set>
      <if test="record.expenseId != null">
        expense_id = #{record.expenseId,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountbookId != null">
        accountBook_id = #{record.accountbookId,jdbcType=VARCHAR},
      </if>
      <if test="record.expenseAmount != null">
        expense_amount = #{record.expenseAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.expenseComment != null">
        expense_comment = #{record.expenseComment,jdbcType=VARCHAR},
      </if>
      <if test="record.expenseDate != null">
        expense_date = #{record.expenseDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update expense
    set expense_id = #{record.expenseId,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=VARCHAR},
      accountBook_id = #{record.accountbookId,jdbcType=VARCHAR},
      expense_amount = #{record.expenseAmount,jdbcType=VARCHAR},
      expense_comment = #{record.expenseComment,jdbcType=VARCHAR},
      expense_date = #{record.expenseDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="bbx.bean.Expense">
    update expense
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="accountbookId != null">
        accountBook_id = #{accountbookId,jdbcType=VARCHAR},
      </if>
      <if test="expenseAmount != null">
        expense_amount = #{expenseAmount,jdbcType=VARCHAR},
      </if>
      <if test="expenseComment != null">
        expense_comment = #{expenseComment,jdbcType=VARCHAR},
      </if>
      <if test="expenseDate != null">
        expense_date = #{expenseDate,jdbcType=VARCHAR},
      </if>
    </set>
    where expense_id = #{expenseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="bbx.bean.Expense">
    update expense
    set account_id = #{accountId,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=VARCHAR},
      accountBook_id = #{accountbookId,jdbcType=VARCHAR},
      expense_amount = #{expenseAmount,jdbcType=VARCHAR},
      expense_comment = #{expenseComment,jdbcType=VARCHAR},
      expense_date = #{expenseDate,jdbcType=VARCHAR}
    where expense_id = #{expenseId,jdbcType=INTEGER}
  </update>
</mapper>